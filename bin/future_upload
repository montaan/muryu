#!/usr/bin/env ruby

$NO_TILE_DRAWING=true

require 'future'
require 'find'
include Future

def upload(user, fname)
  puts "Uploading #{fname}"
  Uploader.upload(:user => user, :io => File.open(fname),
                  :filename => fname)
end

unless ARGV.size > 2
  puts <<EOF
future_upload <user> <password> <files>
EOF
  exit
end

Users.register(ARGV[0], ARGV[1])
count = 0
Future.image_cache.batch_start
user = Users.authenticate(ARGV[0], ARGV[1])
begin
 ARGV[2..-1].each do |fname|
  if File.directory? fname
    Find.find(fname) do |fn|
      next if File.directory? fn
      upload(user, fn)
      count += 1
      if count > 100
        Future.image_cache.batch_end
        Future.image_cache.batch_start
        count = 0
      end
    end
  else
    upload(user, fname)
    count += 1
  end
  if count > 100
    Future.image_cache.batch_end
    Future.image_cache.batch_start
    count = 0
  end
 end
ensure
  Future.image_cache.batch_end
end
